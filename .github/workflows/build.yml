name: PR workflow

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code
      uses: actions/checkout@v2

    - name: Genereate code for infrabin protofile
      uses: squzy/protoc-actions@v2.0.9
      with:
        path: --proto_path=proto/ --go_out=plugins=grpc:pkg/infrabin --go_opt=paths=source_relative proto/infrabin.proto

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v0.2.0
      with:
        version: v1.26

    - name: Build
      run: go build -v cmd/go-infrabin/main.go

    - name: Test
      run: go test -v -covermode=atomic -coverprofile=coverage.out -race ./...

    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1.0.2
      with:
          infile: coverage.out
          outfile: coverage.lcov

    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v1.1.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.lcov

    - name: Build docker image on PR
      uses: docker/build-push-action@v1
      with:
        repository: maruina/go-infrabin
        push: false
      if: github.event_name == 'pull_request'

    - name: Build and push latest docker image on master
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: maruina/go-infrabin
        tags: latest
      if: github.event_name	== 'push'

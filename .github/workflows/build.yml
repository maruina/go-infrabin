name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Check out code
      uses: actions/checkout@v2.4.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Protoc
      uses: arduino/setup-protoc@master

    - name: Get protoc go binaries
      run: make tools

    - name: Test
      run: make test

    - name: Build
      run: make build

    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: coverage.out
        ignore: pkg/infrabin/infrabin.pb.go,pkg/infrabin/infrabin.pb.gw.go,pkg/infrabin/infrabin_grpc.pb.go

    - name: Build docker image on PR
      uses: docker/build-push-action@v2.8.0
      with:
        tags: maruina/go-infrabin:latest
        push: false
      if: github.event_name == 'pull_request'

    - name: Login to DockerHub
      uses: docker/login-action@v1.12.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Packages
      uses: docker/login-action@v1.12.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push latest docker image on master
      uses: docker/build-push-action@v2.8.0
      with:
        push: true
        tags: |
          docker.io/maruina/go-infrabin:latest
          ghcr.io/maruina/go-infrabin:latest
      if: github.event_name	== 'push'

    - name: Check images
      run: |
        docker buildx imagetools inspect docker.io/maruina/go-infrabin:latest
        docker buildx imagetools inspect ghcr.io/maruina/go-infrabin:latest
        docker pull docker.io/maruina/go-infrabin:latest
        docker pull ghcr.io/maruina/go-infrabin:latest
      if: github.event_name	== 'push'

    - name: Test GoReleaser
      uses: goreleaser/goreleaser-action@v2.8.0
      with:
        version: latest
        args: --snapshot --skip-publish --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

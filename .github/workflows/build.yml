name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v6
      with:
        go-version: ^1.25

    - name: Check out code
      uses: actions/checkout@v5

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get protoc go binaries
      run: make tools

    - name: Test
      run: make test

    - name: Build
      run: make build

    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: coverage.out
        ignore: pkg/infrabin/infrabin.pb.go,pkg/infrabin/infrabin.pb.gw.go,pkg/infrabin/infrabin_grpc.pb.go

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ github.event_name == 'pull_request' && fromJSON('["linux/amd64"]') || fromJSON('["linux/amd64", "linux/arm64"]') }}
    steps:
    - name: Prepare
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Check out code
      uses: actions/checkout@v5

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          docker.io/maruina/go-infrabin
          ghcr.io/maruina/go-infrabin
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      if: github.event_name == 'push'

    - name: Login to GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'push'

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=build-${{ env.PLATFORM_PAIR }}
        cache-to: type=gha,mode=max,scope=build-${{ env.PLATFORM_PAIR }}
        outputs: type=image,name=docker.io/maruina/go-infrabin,push-by-digest=true,name-canonical=true,push=${{ github.event_name == 'push' }}

    - name: Export digest
      if: github.event_name == 'push'
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  docker-merge:
    name: Create Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push'
    steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: /tmp/digests
        pattern: digests-*
        merge-multiple: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          docker.io/maruina/go-infrabin
          ghcr.io/maruina/go-infrabin
        tags: |
          type=ref,event=branch
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create manifest list and push
      working-directory: /tmp/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf 'docker.io/maruina/go-infrabin@sha256:%s ' *)

    - name: Inspect image
      run: |
        docker buildx imagetools inspect docker.io/maruina/go-infrabin:${{ steps.meta.outputs.version }}
        docker buildx imagetools inspect ghcr.io/maruina/go-infrabin:${{ steps.meta.outputs.version }}

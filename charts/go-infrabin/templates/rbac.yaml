{{- if .Values.rbac.crossAZ.enabled }}
---
# Role for listing pods in the namespace (required for CrossAZ endpoint)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "go-infrabin.fullname" . }}-crossaz
  labels:
    {{- include "go-infrabin.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "get"]
---
# RoleBinding for the namespace-scoped Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "go-infrabin.fullname" . }}-crossaz
  labels:
    {{- include "go-infrabin.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "go-infrabin.fullname" . }}-crossaz
subjects:
  - kind: ServiceAccount
    name: {{ include "go-infrabin.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
---
# ClusterRole for reading node information (required for AZ extraction)
# Nodes are cluster-scoped resources, so we need a ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "go-infrabin.fullname" . }}-crossaz-nodes
  labels:
    {{- include "go-infrabin.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list"]
---
# ClusterRoleBinding for the cluster-scoped ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "go-infrabin.fullname" . }}-crossaz-nodes
  labels:
    {{- include "go-infrabin.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "go-infrabin.fullname" . }}-crossaz-nodes
subjects:
  - kind: ServiceAccount
    name: {{ include "go-infrabin.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}
